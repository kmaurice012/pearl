{"remainingRequest":"/home/byron/development/tessst/pearl/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/byron/development/tessst/pearl/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/byron/development/tessst/pearl/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/byron/development/tessst/pearl/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/home/byron/development/tessst/pearl/src/views/Home.vue","mtime":1644236566839},{"path":"/home/byron/development/tessst/pearl/node_modules/cache-loader/dist/cjs.js","mtime":1644235333440},{"path":"/home/byron/development/tessst/pearl/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644235334372},{"path":"/home/byron/development/tessst/pearl/node_modules/cache-loader/dist/cjs.js","mtime":1644235333440},{"path":"/home/byron/development/tessst/pearl/node_modules/vue-loader/lib/index.js","mtime":1644235334144}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}